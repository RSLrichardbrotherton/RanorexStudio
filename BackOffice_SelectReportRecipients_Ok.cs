///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BackOffice
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BackOffice_SelectReportRecipients_Ok recording.
    /// </summary>
    [TestModule("bd3372e0-ebba-45ea-b54b-c969e6d52aa7", ModuleType.Recording, 1)]
    public partial class BackOffice_SelectReportRecipients_Ok : ITestModule
    {
        /// <summary>
        /// Holds an instance of the _BackOfficeRepository repository.
        /// </summary>
        public static _BackOfficeRepository repo = _BackOfficeRepository.Instance;

        static BackOffice_SelectReportRecipients_Ok instance = new BackOffice_SelectReportRecipients_Ok();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BackOffice_SelectReportRecipients_Ok()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BackOffice_SelectReportRecipients_Ok Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 300;
            Delay.SpeedFactor = 1.00;

            Init();

            try {
                Report.Log(ReportLevel.Info, "Invoke action", "(Optional Action)\r\nInvoking PerformClick() on item 'BackOffice.SelectReportRecipients_Ok_Btn_64'.", repo.BackOffice.SelectReportRecipients_Ok_Btn_64Info, new RecordItemIndex(0));
                repo.BackOffice.SelectReportRecipients_Ok_Btn_64.PerformClick();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
            try {
                Report.Log(ReportLevel.Info, "Invoke action", "(Optional Action)\r\nInvoking PerformClick() on item 'BackOffice.SelectReportRecipients_Ok_Btn_66'.", repo.BackOffice.SelectReportRecipients_Ok_Btn_66Info, new RecordItemIndex(1));
                repo.BackOffice.SelectReportRecipients_Ok_Btn_66.PerformClick();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(2));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'BackOffice.ConfirmEmailToBeSent_Send_Btn'.", repo.BackOffice.ConfirmEmailToBeSent_Send_BtnInfo, new RecordItemIndex(3));
            repo.BackOffice.ConfirmEmailToBeSent_Send_Btn.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(4));
            Delay.Duration(3000, false);
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'BackOffice.EmailConfirmation_Ok_Btn_72' at Center.", repo.BackOffice.EmailConfirmation_Ok_Btn_72Info, new RecordItemIndex(5));
                repo.BackOffice.EmailConfirmation_Ok_Btn_72.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'BackOffice.EmailConfirmation_Ok_Btn_73' at Center.", repo.BackOffice.EmailConfirmation_Ok_Btn_73Info, new RecordItemIndex(6));
                repo.BackOffice.EmailConfirmation_Ok_Btn_73.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'BackOffice.EmailConfirmation_Ok_Btn_74' at Center.", repo.BackOffice.EmailConfirmation_Ok_Btn_74Info, new RecordItemIndex(7));
                repo.BackOffice.EmailConfirmation_Ok_Btn_74.Click();
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                //Report.Log(ReportLevel.Info, "Invoke action", "(Optional Action)\r\nInvoking PerformClick() on item 'BackOffice.EmailConfirmation_Ok_Btn_72'.", repo.BackOffice.EmailConfirmation_Ok_Btn_72Info, new RecordItemIndex(8));
                //repo.BackOffice.EmailConfirmation_Ok_Btn_72.PerformClick();
                //Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                //Report.Log(ReportLevel.Info, "Invoke action", "(Optional Action)\r\nInvoking PerformClick() on item 'BackOffice.EmailConfirmation_Ok_Btn_73'.", repo.BackOffice.EmailConfirmation_Ok_Btn_73Info, new RecordItemIndex(9));
                //repo.BackOffice.EmailConfirmation_Ok_Btn_73.PerformClick();
                //Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}{Tab}' with focus on 'BackOffice'.", repo.BackOffice.SelfInfo, new RecordItemIndex(10));
            //repo.BackOffice.Self.EnsureVisible();
            //Keyboard.Press("{Tab}{Tab}", 20);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'BackOffice'.", repo.BackOffice.SelfInfo, new RecordItemIndex(11));
            //repo.BackOffice.Self.EnsureVisible();
            //Keyboard.Press("{Return}", 20);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'BackOffice'.", repo.BackOffice.SelfInfo, new RecordItemIndex(12));
            repo.BackOffice.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
